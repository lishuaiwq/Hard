题目描述
给定一棵二叉搜索树，请找出其中的第k小的结点。例如， 
（5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。


因为二叉搜索树的中序遍历序列就是排序好的算法
保存中序遍历的顺序
直接返回k-1位置的元素就可以

class Solution {
public:
    TreeNode* KthNode(TreeNode* pRoot, int k)
    {
        if(pRoot==NULL||k<=0)
        {
            return NULL;
        }
        vector<TreeNode*> s;
        InOrder(pRoot,s);
        if(k>s.size())
        {
            return NULL;
        }
        return s[k-1];
    }
    void InOrder(TreeNode* pRoot,vector<TreeNode*>& v)
    {
         if(pRoot)
         {
             InOrder(pRoot->left,v);
             v.push_back(pRoot);
             InOrder(pRoot->right,v);
         }
    }
};