题目描述：表示数值的字符串
请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
例如，字符串"+100","5e2","-123","3.1416"和"-1E-16"都表示数值。 
但是"12e","1a3.14","1.2.3","+-5"和"12e+4.3"都不是。


思路：逆向思维判断哪些情况不是

1.遇到了e||E，如果是最后一个字符||出现了两次就是错误
2.遇到了+||-，如果出现了两次&&不是在e后面&&也不再后面E后面，就是错误
              如果出现了一次&&不在第一个&&且不是在eE后面，就是错误的
3.遇见.   ，如果是第二次出现或者e已经出现了两次，即在e后面出现也是错误的

4.不是合法数字也是错误


当使用上述条件遍历完整个字符串以后，没有返回
那么就是合法的数值字符串。

class Solution {
public:
    bool isNumeric(char* string)
    {
        if(string==NULL)
            return false;
        bool ispoint=false;
        bool isDev=false;
        bool isE=false;
        int size=strlen(string);
        for(int i=0;i<size;i++)
        {
            if(string[i]=='e'||string[i]=='E')
            {
                if(i==size-1||isE)//是最后一个元素或者出现了两次都是错的
                    return false;
                isE=true;
            }
            else if(string[i]=='+'||string[i]=='-')
            {
               if(isDev&&(string[i-1]!='E'&&string[i-1]!='e'))
                  return false;
                if(!isDev&&i>0&&(string[i-1]!='E'&&string[i-1]!='e'))//第一次出现
                  return false;
                  isDev=true;
            }
            else if(string[i]=='.')
                  {
                       if(ispoint||isE)
                          return false;
                      ispoint=true;
                  }  
             else if(string[i]>'9'||string[i]<0)
                  {
                      return false;
                  }
        }
                  return true;
    }

};