题目描述
给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。
例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，
那么一共存在6个滑动窗口，他们的最大值分别为{4,4,6,6,6,5}；
 针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： {[2,3,4],2,6,2,5,1}，
 {2,[3,4,2],6,2,5,1}， {2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}，
 {2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}。


注意是找的滑动窗口中值最大的那个。。

方法1.：遍历每个窗口找其最大值就可以了

方法2：避免不必要的比较

class Solution {
public:
    //题是找滑动窗口中最大的那个数字
    vector<int> maxInWindows(const vector<int>& num, unsigned int size)
    {
        vector<int> v;
        deque<int> d;//队列中保存的是元素的下标
    if(size<1)
        return v;
        for (unsigned int i = 0; i < num.size(); i++)
        {
            while(!d.empty() && num[d.back()]<=num[i])
            {
                d.pop_back();//弹出队头元素  
            }
            while (!d.empty() && i-d.front() + 1>size)//超出了范围则
            {
                d.pop_front();
            }
           d.push_back(i);
            if (!d.empty()&&i+1>=size)
            {
                v.push_back(num[d.front()]);
            }
        }
    return v;
}
};