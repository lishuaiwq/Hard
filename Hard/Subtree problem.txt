输入两棵二叉树A，B，判断B是不是A的子结构。（ps：我们约定空树不是任意一个树的子结构）

class Solution {
public:
    bool iStrue(TreeNode* pRoot1,TreeNode* pRoot2)
    {
        if(pRoot2==NULL)
            return true;
        if(pRoot1==NULL)
            return  false;
        if(pRoot1->val==pRoot2->val)
        {
            return iStrue(pRoot1->left,pRoot2->left)&&iStrue(pRoot1->right,pRoot2->right);
        }else
        {
            return false;
        }
        
    }
    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)
    {
     if(pRoot2==NULL)
         return false;
      if(pRoot1==NULL)
          return false;
        bool flag=iStrue(pRoot1,pRoot2);//如果是根节点的话则直接开始遍历了
        if(!flag)//证明第一个结点不是根节点
          flag=HasSubtree(pRoot1->left,pRoot2);
        if(!flag)
          flag= HasSubtree(pRoot1->right,pRoot2);
        return flag;
    }
};