输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 
则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.

class Solution {
public:
      vector<int> printMatrix(vector<vector<int> > matrix) {
        int row = matrix.size();//行
        int col = matrix[0].size();//列
        vector<int> res;
          
        // 输入的二维数组非法，返回空的数组
        if (row == 0 || col == 0)  return res;
          
        // 定义四个关键变量，表示左上和右下的打印范围
        int left = 0;//列
        int  top = 0;//行
        int  right = col - 1;//列
        int bottom = row - 1;//行
        while (left <= right && top <= bottom)
        {
            // left to right
            //向左走
            for (int i = left; i <= right; ++i)  res.push_back(matrix[top][i]);
            // 向下走
            for (int i = top + 1; i <= bottom; ++i)  res.push_back(matrix[i][right]);
            // 向右走
            if (top != bottom)//不在一行
            for (int i = right - 1; i >= left; --i)  res.push_back(matrix[bottom][i]);
            //向上走
            if (left != right)//不在一列
            for (int i = bottom - 1; i > top; --i)  res.push_back(matrix[i][left]);
            left++,top++,right--,bottom--;
        }
        return res;
    }
};